---
import type { CollectionEntry } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";
import { getBlogs, getTags } from "@lib/blog";
import { kebabCase } from "@lib/utils/kebabCase";
import Link from "@components/Link.astro";
import Time from "@components/Time.astro";

export const getStaticPaths = async () => {
  const allBlogs = await getBlogs();
  const tags = Object.keys(await getTags());

  return tags.map((tag) => {
    const blogs = allBlogs.filter((blog) =>
      blog.data.tags.map((t) => t).includes(tag)
    );

    return {
      params: { tag: kebabCase(tag) },
      props: { blogs, tag }
    };
  });
};

const { blogs, tag } = Astro.props as {
  blogs: CollectionEntry<"blog">[];
  tag: string;
};

const pageTitle = `「${tag}」の記事一覧`;
---

<BaseLayout title={pageTitle} description={pageTitle}>
  <div class="pt-8 pb-20">
    <p>{`${pageTitle}(${blogs.length}記事)`}</p>
  </div>
  <div>
    <ol class="flex flex-col gap-8">
      {
        blogs.map((blog) => (
          <li>
            <Time date={blog.data.date} />
            <Link href={`/blog/${blog.slug}`}>{blog.data.title}</Link>
            <p class="line-clamp-2">{blog.data.summary}</p>
          </li>
        ))
      }
    </ol>
  </div>
</BaseLayout>
