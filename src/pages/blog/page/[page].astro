---
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { formatInTimeZone } from "date-fns-tz";

import BaseLayout from "@layouts/BaseLayout.astro";
import Link from "@components/Link.astro";
import { getBlogs } from "@lib/blog";
import { DEFAULT_PAGE_SIZE } from "@constants";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const allBlogs = await getBlogs();
  return paginate(allBlogs, { pageSize: DEFAULT_PAGE_SIZE });
};

const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };
---

<BaseLayout>
  <div class="pt-8 pb-20">
    <p>記事一覧</p>
  </div>
  <div>
    <ol class="flex flex-col gap-8">
      {
        page.data.map((blog) => {
          const formattedDate = formatInTimeZone(
            new Date(blog.data.date),
            "Asia/Tokyo",
            "yyyy年MM月dd日"
          );
          return (
            <li>
              <time
                datetime={blog.data.date}
                class="block text-gray-500 dark:text-gray-400"
              >
                {formattedDate}
              </time>
              <Link href={`blog/${blog.slug}`}>{blog.data.title}</Link>
              <p>{blog.data.summary}</p>
            </li>
          );
        })
      }
    </ol>
  </div>
  <div class="py-12">
    <p>{Object.keys(page).join(", ")}</p>
    <p>start: {page.start}</p>
    <p>current Page: {page.currentPage}</p>
    <p>size: {page.size}</p>
    <p>total: {page.total}</p>
    <p>end: {page.end}</p>
    <p>lastPage: {page.lastPage}</p>
    <ul>
      <li>url.current: {page.url.current}</li>
      <li>url.next: {page.url.next}</li>
      <li>url.prev: {page.url.prev}</li>
    </ul>
  </div>
</BaseLayout>
